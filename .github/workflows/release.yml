name: Release and Publish

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write
  attestations: write

env:
  NODE_VERSION: '22'

jobs:
  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run type checking
        run: npm run typecheck

      - name: Run linter
        run: npm run lint

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Run security audit
        run: npm audit --audit-level moderate

      - name: Run dependency vulnerability check
        run: npx audit-ci --moderate

      - name: Build project
        run: npm run build

      - name: Test package installation
        run: |
          npm pack
          npm install -g ./tideways-mcp-server-*.tgz
          echo "Package installed successfully"
          npm uninstall -g tideways-mcp-server

  release:
    name: Release and Publish
    runs-on: ubuntu-latest
    environment: production
    needs: quality-gate
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Verify package contents
        run: |
          echo "Package contents:"
          npm pack --dry-run
          
          echo "Testing CLI functionality:"
          node bin/cli.js --help || echo "CLI help check completed"

      - name: Release with semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

      - name: Publication summary
        if: success()
        run: |
          echo "Package published successfully with provenance attestation"
          echo "NPM package: https://www.npmjs.com/package/tideways-mcp-server"
          echo "GitHub release: https://github.com/${{ github.repository }}/releases"
          echo "Authentication: NPM token with provenance attestation"

  notify-success:
    name: Notify Success
    runs-on: ubuntu-latest
    needs: [quality-gate, release]
    if: success()
    permissions:
      contents: read

    steps:
      - name: Success notification
        run: |
          echo "üéâ Release workflow completed successfully!"
          echo "üì¶ Package published to NPM"
          echo "üè∑Ô∏è GitHub release created"
          echo "üìù Changelog updated"

  notify-failure:
    name: Notify Failure
    runs-on: ubuntu-latest
    needs: [quality-gate, release]
    if: failure()
    permissions:
      contents: read

    steps:
      - name: Failure notification
        run: |
          echo "‚ùå Release workflow failed!"
          echo "Please check the logs for details"
          exit 1